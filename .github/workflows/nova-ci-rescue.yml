name: Nova CI-Rescue

on:
  push:
    branches:
      - main
      - "feature/**"
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR to run Nova on (optional)"
        required: false

permissions:
  contents: write      # Needed for pushing fixes
  pull-requests: write # For commenting or opening PRs
  issues: write        # For commenting on issues

jobs:
  test-and-auto-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install Nova locally if present, else from PyPI
          if [ -d "./src" ]; then
            pip install -e ./src
          else
            pip install nova-ci-rescue
          fi
          pip install pytest pytest-cov pytest-json-report

      - name: Run initial tests
        id: initial-tests
        continue-on-error: true
        run: |
          echo "Running initial test suite..."
          pytest demo_workspace/tests -v --tb=short > test_results.txt 2>&1 || echo "TESTS_FAILED=true" >> $GITHUB_OUTPUT
          cat test_results.txt

      - name: Run Nova Auto-Fix if tests failed
        if: steps.initial-tests.outputs.TESTS_FAILED == 'true' || github.event_name == 'workflow_dispatch'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          NOVA_LLM_MODEL: ${{ secrets.NOVA_DEFAULT_LLM_MODEL || 'gpt-5' }}
        run: |
          echo "Running Nova CI-Rescue..."
          cd demo_workspace || true
          nova fix . --max-iters 3 --timeout 300

      - name: Run tests after fix
        if: steps.initial-tests.outputs.TESTS_FAILED == 'true'
        run: |
          echo "Running tests after Nova fix..."
          pytest demo_workspace/tests -v

      - name: Upload Nova artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nova-run-artifacts
          path: |
            demo_workspace/.nova/
            test_results.txt
