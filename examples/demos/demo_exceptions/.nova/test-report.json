{"created": 1755532747.4992385, "duration": 0.033347368240356445, "exitcode": 1, "root": "/workspace", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "examples/demos/demo_exceptions", "outcome": "passed", "result": []}, {"nodeid": "examples/demos", "outcome": "passed", "result": [{"nodeid": "examples/demos/demo_exceptions", "type": "Dir"}]}, {"nodeid": "examples", "outcome": "passed", "result": [{"nodeid": "examples/demos", "type": "Dir"}]}, {"nodeid": "telemetry/20250815T031640Z-8f0c26e4/patches", "outcome": "passed", "result": []}, {"nodeid": "telemetry/20250815T031640Z-8f0c26e4/reports", "outcome": "passed", "result": []}, {"nodeid": "telemetry/20250815T031640Z-8f0c26e4", "outcome": "passed", "result": [{"nodeid": "telemetry/20250815T031640Z-8f0c26e4/patches", "type": "Dir"}, {"nodeid": "telemetry/20250815T031640Z-8f0c26e4/reports", "type": "Dir"}]}, {"nodeid": "telemetry/20250815T040417Z-a3020170/reports", "outcome": "passed", "result": []}, {"nodeid": "telemetry/20250815T040417Z-a3020170", "outcome": "passed", "result": [{"nodeid": "telemetry/20250815T040417Z-a3020170/reports", "type": "Dir"}]}, {"nodeid": "telemetry", "outcome": "passed", "result": [{"nodeid": "telemetry/20250815T031640Z-8f0c26e4", "type": "Dir"}, {"nodeid": "telemetry/20250815T040417Z-a3020170", "type": "Dir"}]}, {"nodeid": "test_exceptions.py", "outcome": "passed", "result": [{"nodeid": "test_exceptions.py::test_divide_numbers_success", "type": "Function", "lineno": 11}, {"nodeid": "test_exceptions.py::test_divide_numbers_exceptions", "type": "Function", "lineno": 18}, {"nodeid": "test_exceptions.py::test_validate_age_success", "type": "Function", "lineno": 35}, {"nodeid": "test_exceptions.py::test_validate_age_exceptions", "type": "Function", "lineno": 42}, {"nodeid": "test_exceptions.py::test_process_data_success", "type": "Function", "lineno": 63}, {"nodeid": "test_exceptions.py::test_process_data_exceptions", "type": "Function", "lineno": 70}, {"nodeid": "test_exceptions.py::test_file_processor_exceptions", "type": "Function", "lineno": 93}, {"nodeid": "test_exceptions.py::test_safe_conversion_success", "type": "Function", "lineno": 108}, {"nodeid": "test_exceptions.py::test_safe_conversion_exceptions", "type": "Function", "lineno": 115}, {"nodeid": "test_exceptions.py::test_custom_error", "type": "Function", "lineno": 128}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "examples", "type": "Dir"}, {"nodeid": "telemetry", "type": "Dir"}, {"nodeid": "test_exceptions.py", "type": "Module"}]}], "tests": [{"nodeid": "test_exceptions.py::test_divide_numbers_success", "lineno": 11, "outcome": "passed", "keywords": ["test_divide_numbers_success", "test_exceptions.py", "workspace", ""], "setup": {"duration": 7.937500000010367e-05, "outcome": "passed"}, "call": {"duration": 6.724999999985215e-05, "outcome": "passed"}, "teardown": {"duration": 5.270799999990139e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_divide_numbers_exceptions", "lineno": 18, "outcome": "failed", "keywords": ["test_divide_numbers_exceptions", "test_exceptions.py", "workspace", ""], "setup": {"duration": 5.11249999999297e-05, "outcome": "passed"}, "call": {"duration": 0.000229542000000027, "outcome": "failed", "crash": {"path": "/workspace/test_exceptions.py", "lineno": 24, "message": "AssertionError: assert 'division by zero' == 'Cannot divide by zero'\n  \n  - Cannot divide by zero\n  + division by zero"}, "traceback": [{"path": "test_exceptions.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_divide_numbers_exceptions():\n        \"\"\"Test division exceptions.\"\"\"\n        # Test ZeroDivisionError\n        with pytest.raises(ZeroDivisionError) as exc_info:\n            divide_numbers(10, 0)\n>       assert str(exc_info.value) == \"Cannot divide by zero\"\nE       AssertionError: assert 'division by zero' == 'Cannot divide by zero'\nE         \nE         - Cannot divide by zero\nE         + division by zero\n\ntest_exceptions.py:24: AssertionError"}, "teardown": {"duration": 0.0001265000000001404, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_validate_age_success", "lineno": 35, "outcome": "passed", "keywords": ["test_validate_age_success", "test_exceptions.py", "workspace", ""], "setup": {"duration": 5.854200000010579e-05, "outcome": "passed"}, "call": {"duration": 5.629200000001333e-05, "outcome": "passed"}, "teardown": {"duration": 6.050000000001887e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_validate_age_exceptions", "lineno": 42, "outcome": "failed", "keywords": ["test_validate_age_exceptions", "test_exceptions.py", "workspace", ""], "setup": {"duration": 4.12080000000703e-05, "outcome": "passed"}, "call": {"duration": 5.7583000000027695e-05, "outcome": "failed", "crash": {"path": "/workspace/test_exceptions.py", "lineno": 46, "message": "Failed: DID NOT RAISE <class 'exceptions.ValidationError'>"}, "traceback": [{"path": "test_exceptions.py", "lineno": 46, "message": "Failed"}], "longrepr": "def test_validate_age_exceptions():\n        \"\"\"Test age validation exceptions.\"\"\"\n        # Test invalid type\n>       with pytest.raises(ValidationError) as exc_info:\nE       Failed: DID NOT RAISE <class 'exceptions.ValidationError'>\n\ntest_exceptions.py:46: Failed"}, "teardown": {"duration": 7.145800000007974e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_process_data_success", "lineno": 63, "outcome": "passed", "keywords": ["test_process_data_success", "test_exceptions.py", "workspace", ""], "setup": {"duration": 3.658299999997894e-05, "outcome": "passed"}, "call": {"duration": 5.133300000004226e-05, "outcome": "passed"}, "teardown": {"duration": 4.379099999995972e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_process_data_exceptions", "lineno": 70, "outcome": "failed", "keywords": ["test_process_data_exceptions", "test_exceptions.py", "workspace", ""], "setup": {"duration": 5.3375000000022155e-05, "outcome": "passed"}, "call": {"duration": 6.399999999984196e-05, "outcome": "failed", "crash": {"path": "/workspace/exceptions.py", "lineno": 30, "message": "TypeError: 'NoneType' object is not iterable"}, "traceback": [{"path": "test_exceptions.py", "lineno": 75, "message": ""}, {"path": "exceptions.py", "lineno": 30, "message": "TypeError"}], "longrepr": "def test_process_data_exceptions():\n        \"\"\"Test data processing exceptions.\"\"\"\n        # Test None data\n        with pytest.raises(ValueError) as exc_info:\n>           process_data(None)\n\ntest_exceptions.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = None\n\n    def process_data(data):\n        \"\"\"Process data with multiple exception types (intentionally buggy).\"\"\"\n        result = []\n>       for item in data:\nE       TypeError: 'NoneType' object is not iterable\n\nexceptions.py:30: TypeError"}, "teardown": {"duration": 8.579100000005724e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_file_processor_exceptions", "lineno": 93, "outcome": "failed", "keywords": ["test_file_processor_exceptions", "test_exceptions.py", "workspace", ""], "setup": {"duration": 3.0165999999942628e-05, "outcome": "passed"}, "call": {"duration": 0.0001619170000000114, "outcome": "failed", "crash": {"path": "/workspace/test_exceptions.py", "lineno": 99, "message": "Failed: DID NOT RAISE <class 'FileNotFoundError'>"}, "traceback": [{"path": "test_exceptions.py", "lineno": 99, "message": "Failed"}], "longrepr": "def test_file_processor_exceptions():\n        \"\"\"Test FileProcessor exception handling.\"\"\"\n        processor = FileProcessor(\"nonexistent_file.txt\")\n    \n        # Test FileNotFoundError\n>       with pytest.raises(FileNotFoundError) as exc_info:\nE       Failed: DID NOT RAISE <class 'FileNotFoundError'>\n\ntest_exceptions.py:99: Failed"}, "teardown": {"duration": 5.974999999991404e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_safe_conversion_success", "lineno": 108, "outcome": "passed", "keywords": ["test_safe_conversion_success", "test_exceptions.py", "workspace", ""], "setup": {"duration": 4.337499999995664e-05, "outcome": "passed"}, "call": {"duration": 3.945800000004773e-05, "outcome": "passed"}, "teardown": {"duration": 3.80840000000493e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_safe_conversion_exceptions", "lineno": 115, "outcome": "failed", "keywords": ["test_safe_conversion_exceptions", "test_exceptions.py", "workspace", ""], "setup": {"duration": 4.9709000000008885e-05, "outcome": "passed"}, "call": {"duration": 9.220800000009355e-05, "outcome": "failed", "crash": {"path": "/workspace/test_exceptions.py", "lineno": 121, "message": "assert \"Cannot convert 'abc' to int\" in \"invalid literal for int() with base 10: 'abc'\"\n +  where \"invalid literal for int() with base 10: 'abc'\" = str(ValueError(\"invalid literal for int() with base 10: 'abc'\"))\n +    where ValueError(\"invalid literal for int() with base 10: 'abc'\") = <ExceptionInfo ValueError(\"invalid literal for int() with base 10: 'abc'\") tblen=2>.value"}, "traceback": [{"path": "test_exceptions.py", "lineno": 121, "message": "AssertionError"}], "longrepr": "def test_safe_conversion_exceptions():\n        \"\"\"Test conversion exceptions.\"\"\"\n        # Test invalid literal\n        with pytest.raises(ValueError) as exc_info:\n            safe_conversion(\"abc\", int)\n>       assert \"Cannot convert 'abc' to int\" in str(exc_info.value)\nE       assert \"Cannot convert 'abc' to int\" in \"invalid literal for int() with base 10: 'abc'\"\nE        +  where \"invalid literal for int() with base 10: 'abc'\" = str(ValueError(\"invalid literal for int() with base 10: 'abc'\"))\nE        +    where ValueError(\"invalid literal for int() with base 10: 'abc'\") = <ExceptionInfo ValueError(\"invalid literal for int() with base 10: 'abc'\") tblen=2>.value\n\ntest_exceptions.py:121: AssertionError"}, "teardown": {"duration": 5.4917000000154204e-05, "outcome": "passed"}}, {"nodeid": "test_exceptions.py::test_custom_error", "lineno": 128, "outcome": "passed", "keywords": ["test_custom_error", "test_exceptions.py", "workspace", ""], "setup": {"duration": 3.2041999999954385e-05, "outcome": "passed"}, "call": {"duration": 3.4124999999995964e-05, "outcome": "passed"}, "teardown": {"duration": 3.483400000003911e-05, "outcome": "passed"}}]}