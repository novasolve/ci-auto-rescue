name: Nova CI-Rescue Auto-Fix

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull request number to fix"
        required: true
        type: string
      triggered_by:
        description: "Who triggered this workflow"
        required: false
        type: string
        default: "manual"

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  auto-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr_number }}
            });

            // Checkout the PR branch
            await exec.exec('git', ['checkout', pr.data.head.ref]);

            return {
              branch: pr.data.head.ref,
              sha: pr.data.head.sha,
              title: pr.data.title
            };

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Nova CI-Rescue
        run: |
          pip install nova-ci-rescue
          # Or install from your private registry:
          # pip install nova-ci-rescue --index-url ${{ secrets.NOVA_REGISTRY_URL }}

      - name: Run Nova CI-Rescue
        id: nova
        env:
          NOVA_API_KEY: ${{ secrets.NOVA_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run Nova to analyze and fix failing tests
          nova-rescue fix \
            --pr-number ${{ inputs.pr_number }} \
            --repo ${{ github.repository }} \
            --max-iterations 3 \
            --auto-commit

      - name: Push fixes if any
        if: success()
        run: |
          # Check if there are changes to commit
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "Nova CI-Rescue[bot]"
            git config user.email "nova-ci-rescue[bot]@users.noreply.github.com"
            
            git add -A
            git commit -m "ü§ñ Nova CI-Rescue: Auto-fix failing tests
            
            This commit was automatically generated by Nova CI-Rescue to fix failing tests.
            Triggered by: ${{ inputs.triggered_by }}
            PR: #${{ inputs.pr_number }}"
            
            git push origin HEAD
            
            echo "‚úÖ Fixes pushed successfully!"
          else
            echo "‚ÑπÔ∏è No changes needed - tests might be passing now!"
          fi

      - name: Comment on PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            let message = '';

            if (status === 'success') {
              message = `## ‚úÖ Nova CI-Rescue Complete!
              
              I've successfully analyzed and fixed the failing tests in this PR.
              
              **What I did:**
              - üîç Analyzed test failures
              - üõ†Ô∏è Generated and applied fixes
              - üìù Committed the changes
              
              The CI should pass now. If not, I might need another attempt or manual intervention.`;
            } else {
              message = `## ‚ö†Ô∏è Nova CI-Rescue Encountered Issues
              
              I attempted to fix the failing tests but encountered some problems.
              
              **What happened:**
              - Job status: ${status}
              - Check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details
              
              You may need to fix the tests manually or try running Nova again.`;
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.pr_number }},
              body: message
            });
